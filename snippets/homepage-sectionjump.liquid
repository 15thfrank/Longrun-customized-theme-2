<div class="sectionjumper" id="sectionjumper">
    <i class="sjdirection" id="sjup" onclick="topArrowJump()"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#4a7d71" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 15l-6-6-6 6"/></svg></i>
    <div id="sectionstojumpwrap">
      
    </div>
    <i class="sjdirection" id="sjdown" onclick="bottomArrowJump()"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#4a7d71" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9l6 6 6-6"/></svg></i>
  </div>
  
  <style>
    .sectionjumper {
      position: fixed;
      top: 35%;
      z-index: 9;
      /*max-width: 20px;
      background: rgba(158, 154, 154, 0.5);*/
      right: 20px;
      text-align: center;
      text-align: center;
      min-height: 30px;
    }
    @media (max-width: 450px) {
      .sectionjumper {
        display: none;
      }
    }
    /*#sectionstojumpwrap {
      display: block;
    }*/
    .sectiontojump {
      border: 1px solid #4a7d71;
      border-radius: 50%;
      display: block;
      margin: 5px auto;
    }
    .sectiontojump.currentjump {
      background-color: #4a7d71;
    }
    .sjdirection {
      cursor: pointer;
      color:#4a7d71;
    }
  </style>
  
  <script>
    const sctns = document.querySelectorAll('.shopify-section');
  
    const arrangeSectionList = function() {
      sctns.forEach(sc => {
        document.getElementById('sectionstojumpwrap').innerHTML += '<svg height="10" width="10" class="sectiontojump"></svg> '
      })
    }
  
    arrangeSectionList();
  
    const checkPosition = function() {
      const sectiontojump = document.querySelectorAll('.sectiontojump');
      var lastindex = sectiontojump.length - 1;
      var currentindex = 0;
      sctns.forEach(sctn => {
        if (isInViewprt(sctn)) {
          removeCurrentJump();
          sectiontojump[currentindex].classList.add('currentjump');
        };
        currentindex++;
      });
    };
  
    const removeCurrentJump = function() {
      const sectiontojump = document.querySelectorAll('.sectiontojump');
      sectiontojump.forEach(stj => {
        stj.classList.remove('currentjump');
      });
    };
  
    const topArrowJump = function(){
      var sectionstojump = document.querySelectorAll('.sectiontojump');
      var currentindex = 0;
      sectionstojump.forEach(stj => {
        if (currentindex > 0) {
          if(stj.classList.contains('currentjump')){
            var previndex = currentindex - 1;
            removeCurrentJump();
            sectionstojump[previndex].classList.add('currentjump');
            var crid = sctns[previndex].getAttribute('id');
            var intoview = document.getElementById(crid);
            intoview.scrollIntoView();
          };
        };
        currentindex++;
      });
    };
  
    const bottomArrowJump = function(){
      var sectionstojump = document.querySelectorAll('.sectiontojump');
      var currentindex = 0;
      var loopuse = 0;
      const lastindex = sectionstojump.length -1;
      sectionstojump.forEach(stj => {
        if ((currentindex >= 0) || (currentindex < lastindex)) {
          if(stj.classList.contains('currentjump')){
            if (loopuse == 0) {
              var nextindex = currentindex + 1;
              removeCurrentJump();
              sectionstojump[nextindex].classList.add('currentjump');
              var crid = sctns[nextindex].getAttribute('id');
              var intoview = document.getElementById(crid);
              intoview.scrollIntoView();
              loopuse++;
            }
          };
        };
        currentindex++;
      });
    }
  
    function isInViewprt(elem) {
      var bounding = elem.getBoundingClientRect();
      return (
          bounding.top >= 0 &&
          bounding.left >= 0 &&
          bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
          bounding.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    };

    //Autoplay video function
    const videoAutoplay = function() {
      const videos = document.querySelectorAll(".video-section__load-player-button");

      videos.forEach(video => {
        if (isInViewprt(video)) {
          video.click();
        }
      });


    }
  
    window.addEventListener("load", (event) => {
      checkPosition();
    });
    window.addEventListener("scroll", checkPosition);
    window.addEventListener("resize", checkPosition);
    //window.addEventListener("scroll", videoAutoplay);
    //var timer = null;
    /*window.addEventListener('scroll', function() {
        if(timer !== null) {
            clearTimeout(timer);        
        }
        timer = setTimeout(checkPosition, 150);
    }, false);
    $.fn.scrollEnd = function(callback, timeout) {          
      $(this).on('scroll', function(){
        var $this = $(this);
        if ($this.data('scrollTimeout')) {
          clearTimeout($this.data('scrollTimeout'));
        }
        $this.data('scrollTimeout', setTimeout(callback,timeout));
      });
    };
  
    $(window).scrollEnd(function(){
        checkPosition();
    }, 350);*/
  
  </script>